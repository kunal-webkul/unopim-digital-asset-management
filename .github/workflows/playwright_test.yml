name: DAM Module Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  dam_playwright_tests:
    name: DAM Module End-to-end UI Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Running Composer Install
        run: composer install

      - name: Setting Environment
        run: |
          cp .env.example .env
          sed -i "s|^\(APP_ENV=\s*\).*$|\1testing|" .env
          sed -i "s|^\(DB_HOST=\s*\).*$|\1127.0.0.1|" .env
          sed -i "s|^\(DB_PORT=\s*\).*$|\1${{ job.services.mysql.ports['3306'] }}|" .env
          sed -i "s|^\(DB_DATABASE=\s*\).*$|\1unopim|" .env
          sed -i "s|^\(DB_USERNAME=\s*\).*$|\1root|" .env
          sed -i "s|^\(DB_PASSWORD=\s*\).*$|\1root|" .env
          cat .env

      - name: Install DAM Module
        run: |
          # Copy DAM package to packages directory
          mkdir -p packages/Webkul/DAM
          cp -r path/to/your/dam/module/* packages/Webkul/DAM/
          
          # Add DAMServiceProvider to config
          sed -i "/Webkul\\\\User\\\\Providers\\\\UserServiceProvider::class,/a \              Webkul\\\\DAM\\\\Providers\\\\DAMServiceProvider::class," config/app.php
          
          # Add PSR-4 autoload entry
          sed -i '/"psr-4": {/a \    "Webkul\\\\DAM\\\\": "packages/Webkul/DAM/src",' composer.json
          
          # Update composer and run migrations
          composer dump-autoload
          php artisan vendor:publish --provider="Webkul\\DAM\\Providers\\DAMServiceProvider"
          php artisan migrate --force
          php artisan db:seed --class="Webkul\\DAM\\Database\\Seeders\\DirectoryTableSeeder"

      - name: Running UnoPim Installer
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate --force
          php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Wait for UnoPim to start
        run: npx wait-on http://localhost:8000

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright for DAM tests
        run: |
          cd packages/Webkul/DAM/tests/e2e-pw
          npm install
          npx playwright install-deps chromium
          npx playwright install chromium

      - name: Run DAM Playwright tests
        run: |
          cd packages/Webkul/DAM/tests/e2e-pw
          npx playwright test --reporter=list

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dam-playwright-report
          path: packages/Webkul/DAM/tests/e2e-pw/playwright-report
