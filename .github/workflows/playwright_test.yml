name: UnoPim + DAM CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout UnoPim
        uses: actions/checkout@v4
        with:
          repository: unopim/unopim
          path: unopim

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, pdo_mysql, fileinfo, curl, intl
          tools: composer:v2

      - name: Install UnoPim
        working-directory: unopim
        run: |
          composer install
          cp .env.example .env
          sed -i "s|^APP_ENV=.*|APP_ENV=testing|" .env
          sed -i "s|^DB_HOST=.*|DB_HOST=127.0.0.1|" .env
          sed -i "s|^DB_PORT=.*|DB_PORT=3306|" .env
          sed -i "s|^DB_DATABASE=.*|DB_DATABASE=unopim|" .env
          sed -i "s|^DB_USERNAME=.*|DB_USERNAME=root|" .env
          sed -i "s|^DB_PASSWORD=.*|DB_PASSWORD=root|" .env
          php artisan key:generate

      - name: Install DAM (via Composer)
        working-directory: unopim
        run: |
          composer require unopim/dam
          php artisan dam-package:install
          php artisan optimize:clear

      - name: Run migrations + seeders
        working-directory: unopim
        run: |
          php artisan migrate --force
          php artisan db:seed --class=Webkul\\DAM\\Database\\Seeders\\DirectoryTableSeeder

      - name: Start UnoPim server
        working-directory: unopim
        run: php artisan serve --host=0.0.0.0 --port=8000 &
      
      - name: Wait for UnoPim
        run: npx wait-on http://127.0.0.1:8000

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright & deps
        working-directory: unopim/tests/e2e-pw
        run: |
          npm ci
          npx playwright install-deps chromium
          npx playwright install chromium

      - name: Run Playwright tests
        working-directory: unopim/tests/e2e-pw
        run: npx playwright test --reporter=html

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: unopim/tests/e2e-pw/playwright-report
