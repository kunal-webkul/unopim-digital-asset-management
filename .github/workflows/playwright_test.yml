name: UnoPim Playwright Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check working directory
        run: |
          pwd
          ls -la
          echo "Current directory contents:"
          ls -la

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, curl, fileinfo, gd, intl, openssl, tokenizer, zip
          coverage: none
          tools: composer:v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Copy or Create .env
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env
          else
            echo "APP_NAME=UnoPim" > .env
            echo "APP_ENV=testing" >> .env
            echo "APP_KEY=" >> .env
            echo "APP_DEBUG=true" >> .env
            echo "APP_URL=http://127.0.0.1:8000" >> .env
            echo "" >> .env
            echo "DB_CONNECTION=mysql" >> .env
            echo "DB_HOST=127.0.0.1" >> .env
            echo "DB_PORT=3306" >> .env
            echo "DB_DATABASE=unopim" >> .env
            echo "DB_USERNAME=root" >> .env
            echo "DB_PASSWORD=root" >> .env
            echo "" >> .env
            echo "CACHE_DRIVER=file" >> .env
            echo "QUEUE_CONNECTION=sync" >> .env
            echo "SESSION_DRIVER=file" >> .env
            echo "SESSION_LIFETIME=120" >> .env
          fi
          cat .env

      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Check for artisan file
        run: |
          echo "Looking for artisan file..."
          find . -name "artisan" -type f
          if [ ! -f artisan ]; then
            echo "ERROR: artisan file not found in current directory!"
            echo "Current directory: $(pwd)"
            echo "Directory contents:"
            ls -la
            exit 1
          fi

      - name: Generate key and migrate
        run: |
          php artisan key:generate
          php artisan migrate:fresh --seed --force

      - name: Install DAM module
        run: composer require unopim/dam

      - name: Build frontend
        run: |
          npm ci
          npm run build

      - name: Start Laravel server in background
        run: |
          php artisan serve --host=127.0.0.1 --port=8000 > server.log 2>&1 &
          echo $! > server.pid

      - name: Wait for Laravel admin login page
        run: |
          npx wait-on http://127.0.0.1:8000/admin/login --timeout 30000
          sleep 5

      - name: Install Playwright
        run: npm install -g @playwright/test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright Tests
        run: npx playwright test --reporter=list,html --timeout=60000

      - name: Stop Laravel server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) 2>/dev/null || true
            rm -f server.pid
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
